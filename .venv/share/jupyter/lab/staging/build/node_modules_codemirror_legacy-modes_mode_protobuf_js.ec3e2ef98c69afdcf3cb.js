"use strict";
(self["webpackChunk_jupyterlab_application_top"] = self["webpackChunk_jupyterlab_application_top"] || []).push([["node_modules_codemirror_legacy-modes_mode_protobuf_js"],{

/***/ "./node_modules/@codemirror/legacy-modes/mode/protobuf.js":
/*!****************************************************************!*\
  !*** ./node_modules/@codemirror/legacy-modes/mode/protobuf.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   protobuf: () => (/* binding */ protobuf)
/* harmony export */ });
function wordRegexp(words) {
  return new RegExp("^((" + words.join(")|(") + "))\\b", "i");
};

var keywordArray = [
  "package", "message", "import", "syntax",
  "required", "optional", "repeated", "reserved", "default", "extensions", "packed",
  "bool", "bytes", "double", "enum", "float", "string",
  "int32", "int64", "uint32", "uint64", "sint32", "sint64", "fixed32", "fixed64", "sfixed32", "sfixed64",
  "option", "service", "rpc", "returns"
];
var keywords = wordRegexp(keywordArray);

var identifiers = new RegExp("^[_A-Za-z\xa1-\uffff][_A-Za-z0-9\xa1-\uffff]*");

function tokenBase(stream) {
  // whitespaces
  if (stream.eatSpace()) return null;

  // Handle one line Comments
  if (stream.match("//")) {
    stream.skipToEnd();
    return "comment";
  }

  // Handle Number Literals
  if (stream.match(/^[0-9\.+-]/, false)) {
    if (stream.match(/^[+-]?0x[0-9a-fA-F]+/))
      return "number";
    if (stream.match(/^[+-]?\d*\.\d+([EeDd][+-]?\d+)?/))
      return "number";
    if (stream.match(/^[+-]?\d+([EeDd][+-]?\d+)?/))
      return "number";
  }

  // Handle Strings
  if (stream.match(/^"([^"]|(""))*"/)) { return "string"; }
  if (stream.match(/^'([^']|(''))*'/)) { return "string"; }

  // Handle words
  if (stream.match(keywords)) { return "keyword"; }
  if (stream.match(identifiers)) { return "variable"; } ;

  // Handle non-detected items
  stream.next();
  return null;
};

const protobuf = {
  name: "protobuf",
  token: tokenBase,
  languageData: {
    autocomplete: keywordArray
  }
}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2NvZGVtaXJyb3JfbGVnYWN5LW1vZGVzX21vZGVfcHJvdG9idWZfanMuZWMzZTJlZjk4YzY5YWZkY2YzY2IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHlDQUF5QztBQUN6Qyx5Q0FBeUM7O0FBRXpDO0FBQ0EsZ0NBQWdDO0FBQ2hDLG1DQUFtQzs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AanVweXRlcmxhYi9hcHBsaWNhdGlvbi10b3AvLi9ub2RlX21vZHVsZXMvQGNvZGVtaXJyb3IvbGVnYWN5LW1vZGVzL21vZGUvcHJvdG9idWYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gd29yZFJlZ2V4cCh3b3Jkcykge1xuICByZXR1cm4gbmV3IFJlZ0V4cChcIl4oKFwiICsgd29yZHMuam9pbihcIil8KFwiKSArIFwiKSlcXFxcYlwiLCBcImlcIik7XG59O1xuXG52YXIga2V5d29yZEFycmF5ID0gW1xuICBcInBhY2thZ2VcIiwgXCJtZXNzYWdlXCIsIFwiaW1wb3J0XCIsIFwic3ludGF4XCIsXG4gIFwicmVxdWlyZWRcIiwgXCJvcHRpb25hbFwiLCBcInJlcGVhdGVkXCIsIFwicmVzZXJ2ZWRcIiwgXCJkZWZhdWx0XCIsIFwiZXh0ZW5zaW9uc1wiLCBcInBhY2tlZFwiLFxuICBcImJvb2xcIiwgXCJieXRlc1wiLCBcImRvdWJsZVwiLCBcImVudW1cIiwgXCJmbG9hdFwiLCBcInN0cmluZ1wiLFxuICBcImludDMyXCIsIFwiaW50NjRcIiwgXCJ1aW50MzJcIiwgXCJ1aW50NjRcIiwgXCJzaW50MzJcIiwgXCJzaW50NjRcIiwgXCJmaXhlZDMyXCIsIFwiZml4ZWQ2NFwiLCBcInNmaXhlZDMyXCIsIFwic2ZpeGVkNjRcIixcbiAgXCJvcHRpb25cIiwgXCJzZXJ2aWNlXCIsIFwicnBjXCIsIFwicmV0dXJuc1wiXG5dO1xudmFyIGtleXdvcmRzID0gd29yZFJlZ2V4cChrZXl3b3JkQXJyYXkpO1xuXG52YXIgaWRlbnRpZmllcnMgPSBuZXcgUmVnRXhwKFwiXltfQS1aYS16XFx4YTEtXFx1ZmZmZl1bX0EtWmEtejAtOVxceGExLVxcdWZmZmZdKlwiKTtcblxuZnVuY3Rpb24gdG9rZW5CYXNlKHN0cmVhbSkge1xuICAvLyB3aGl0ZXNwYWNlc1xuICBpZiAoc3RyZWFtLmVhdFNwYWNlKCkpIHJldHVybiBudWxsO1xuXG4gIC8vIEhhbmRsZSBvbmUgbGluZSBDb21tZW50c1xuICBpZiAoc3RyZWFtLm1hdGNoKFwiLy9cIikpIHtcbiAgICBzdHJlYW0uc2tpcFRvRW5kKCk7XG4gICAgcmV0dXJuIFwiY29tbWVudFwiO1xuICB9XG5cbiAgLy8gSGFuZGxlIE51bWJlciBMaXRlcmFsc1xuICBpZiAoc3RyZWFtLm1hdGNoKC9eWzAtOVxcListXS8sIGZhbHNlKSkge1xuICAgIGlmIChzdHJlYW0ubWF0Y2goL15bKy1dPzB4WzAtOWEtZkEtRl0rLykpXG4gICAgICByZXR1cm4gXCJudW1iZXJcIjtcbiAgICBpZiAoc3RyZWFtLm1hdGNoKC9eWystXT9cXGQqXFwuXFxkKyhbRWVEZF1bKy1dP1xcZCspPy8pKVxuICAgICAgcmV0dXJuIFwibnVtYmVyXCI7XG4gICAgaWYgKHN0cmVhbS5tYXRjaCgvXlsrLV0/XFxkKyhbRWVEZF1bKy1dP1xcZCspPy8pKVxuICAgICAgcmV0dXJuIFwibnVtYmVyXCI7XG4gIH1cblxuICAvLyBIYW5kbGUgU3RyaW5nc1xuICBpZiAoc3RyZWFtLm1hdGNoKC9eXCIoW15cIl18KFwiXCIpKSpcIi8pKSB7IHJldHVybiBcInN0cmluZ1wiOyB9XG4gIGlmIChzdHJlYW0ubWF0Y2goL14nKFteJ118KCcnKSkqJy8pKSB7IHJldHVybiBcInN0cmluZ1wiOyB9XG5cbiAgLy8gSGFuZGxlIHdvcmRzXG4gIGlmIChzdHJlYW0ubWF0Y2goa2V5d29yZHMpKSB7IHJldHVybiBcImtleXdvcmRcIjsgfVxuICBpZiAoc3RyZWFtLm1hdGNoKGlkZW50aWZpZXJzKSkgeyByZXR1cm4gXCJ2YXJpYWJsZVwiOyB9IDtcblxuICAvLyBIYW5kbGUgbm9uLWRldGVjdGVkIGl0ZW1zXG4gIHN0cmVhbS5uZXh0KCk7XG4gIHJldHVybiBudWxsO1xufTtcblxuZXhwb3J0IGNvbnN0IHByb3RvYnVmID0ge1xuICBuYW1lOiBcInByb3RvYnVmXCIsXG4gIHRva2VuOiB0b2tlbkJhc2UsXG4gIGxhbmd1YWdlRGF0YToge1xuICAgIGF1dG9jb21wbGV0ZToga2V5d29yZEFycmF5XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==