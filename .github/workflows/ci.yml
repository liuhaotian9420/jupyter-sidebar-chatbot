name: Jupyter Sidebar Chatbot CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest mypy
    
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install Node.js dependencies
      run: |
        npm ci
        cd jupyter-lab-extension && npm ci
    
    - name: Run Python tests
      run: |
        pytest backend/
    
    - name: Run type checking
      run: |
        mypy backend/
    
    - name: Run JavaScript linting
      run: |
        cd jupyter-lab-extension && npm run lint

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install build twine
        npm ci
        cd jupyter-lab-extension && npm ci
    
    - name: Build extension
      run: |
        cd jupyter-lab-extension && npm run build
    
    - name: Build Python package
      run: |
        python -m build backend/
    
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: |
          backend/dist/
          jupyter-lab-extension/dist/
